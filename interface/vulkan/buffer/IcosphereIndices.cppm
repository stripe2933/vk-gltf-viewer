export module vk_gltf_viewer:vulkan.buffer.IcosphereIndices;

import std;
export import vku;

namespace vk_gltf_viewer::vulkan::buffer {
    /**
     * A standard index buffer for a counter-clockwise winding icosphere. The reference icosphere vertices are:
     * { 0.0000, 0.0000, 1.0000 },
     * { 0.8944, 0.0000, 0.4472 },
     * { 0.2764, 0.8507, 0.4472 },
     * { -0.7236, 0.5257, 0.4472 },
     * { -0.7236, -0.5257, 0.4472 },
     * { 0.2764, -0.8507, 0.4472 },
     * { 0.7236, 0.5257, -0.4472 },
     * { -0.2764, 0.8507, -0.4472 },
     * { -0.8944, 0.0000, -0.4472 },
     * { -0.2764, -0.8507, -0.4472 },
     * { 0.7236, -0.5257, -0.4472 },
     * { 0.0000, 0.0000, -1.0000 },
     * { 0.5257, 0.0000, 0.8507 },
     * { 0.6882, 0.5000, 0.5257 },
     * { 0.1625, 0.5000, 0.8507 },
     * { -0.2629, 0.8090, 0.5257 },
     * { -0.4253, 0.3090, 0.8507 },
     * { -0.8507, 0.0000, 0.5257 },
     * { -0.4253, -0.3090, 0.8507 },
     * { -0.2629, -0.8090, 0.5257 },
     * { 0.1625, -0.5000, 0.8507 },
     * { 0.6882, -0.5000, 0.5257 },
     * { 0.9511, 0.3090, 0.0000 },
     * { 0.5878, 0.8090, 0.0000 },
     * { 0.0000, 1.0000, 0.0000 },
     * { -0.5878, 0.8090, 0.0000 },
     * { -0.9511, 0.3090, 0.0000 },
     * { -0.9511, -0.3090, 0.0000 },
     * { -0.5878, -0.8090, 0.0000 },
     * { 0.0000, -1.0000, 0.0000 },
     * { 0.5878, -0.8090, 0.0000 },
     * { 0.9511, -0.3090, 0.0000 },
     * { 0.2629, 0.8090, -0.5257 },
     * { -0.6882, 0.5000, -0.5257 },
     * { -0.6882, -0.5000, -0.5257 },
     * { 0.2629, -0.8090, -0.5257 },
     * { 0.8507, 0.0000, -0.5257 },
     * { 0.4253, 0.3090, -0.8507 },
     * { -0.1625, 0.5000, -0.8507 },
     * { -0.5257, 0.0000, -0.8507 },
     * { -0.1625, -0.5000, -0.8507 },
     * { 0.4253, -0.3090, -0.8507 },
     */
    export struct IcosphereIndices final : vku::AllocatedBuffer {
        static constexpr std::uint32_t indexCount = 240;
        static constexpr vk::IndexType indexType = vk::IndexType::eUint16;

        explicit IcosphereIndices(vma::Allocator allocator)
            : AllocatedBuffer { allocator, vk::BufferCreateInfo {
                {},
                sizeof(std::uint16_t) * indexCount,
                vk::BufferUsageFlagBits::eIndexBuffer,
            }, vku::allocation::hostWrite } {
            constexpr std::array<std::uint16_t, indexCount> indices {
                0, 12, 14, 12, 1, 13, 14, 13, 2, 12, 13, 14, 0, 14, 16, 14, 2, 15, 16, 15,
                3, 14, 15, 16, 0, 16, 18, 16, 3, 17, 18, 17, 4, 16, 17, 18, 0, 18, 20, 18,
                4, 19, 20, 19, 5, 18, 19, 20, 0, 20, 12, 20, 5, 21, 12, 21, 1, 20, 21, 12,
                1, 22, 13, 22, 6, 23, 13, 23, 2, 22, 23, 13, 2, 24, 15, 24, 7, 25, 15, 25,
                3, 24, 25, 15, 3, 26, 17, 26, 8, 27, 17, 27, 4, 26, 27, 17, 4, 28, 19, 28,
                9, 29, 19, 29, 5, 28, 29, 19, 5, 30, 21, 30, 10, 31, 21, 31, 1, 30, 31, 21,
                2, 23, 24, 23, 6, 32, 24, 32, 7, 23, 32, 24, 3, 25, 26, 25, 7, 33, 26, 33,
                8, 25, 33, 26, 4, 27, 28, 27, 8, 34, 28, 34, 9, 27, 34, 28, 5, 29, 30, 29,
                9, 35, 30, 35, 10, 29, 35, 30, 1, 31, 22, 31, 10, 36, 22, 36, 6, 31, 36, 22,
                6, 37, 32, 37, 11, 38, 32, 38, 7, 37, 38, 32, 7, 38, 33, 38, 11, 39, 33, 39,
                8, 38, 39, 33, 8, 39, 34, 39, 11, 40, 34, 40, 9, 39, 40, 34, 9, 40, 35, 40,
                11, 41, 35, 41, 10, 40, 41, 35, 10, 41, 36, 41, 11, 37, 36, 37, 6, 41, 37, 36,
            };
            allocator.copyMemoryToAllocation(indices.data(), allocation, 0, sizeof(std::uint16_t) * indexCount);
        }
    };
}